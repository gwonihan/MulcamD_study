# -*- coding: utf-8 -*-
"""CodeUp_6096_바둑알 십자 뒤집기.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NNg-hwx8Id3vBfLxOm7nRpZpc2c111DI

#바둑알 십자 뒤집기

- 십자 뒤집기
  - 그 위치에 있는 모든 가로줄 돌의 색을 반대로 놓은 후, 다시 그 위치에 있는 모든 세로줄 돌의 색을 반대로 바꾸기
  - **어떤 위치를 골라 십자 뒤집기를 하면 그 위치를 제외한 가로줄과 세로줄의 색이 모두 반대로 바뀜**

## 입력
- 바둑알이 깔려 있는 상황이 19*19 크기의 정수값으로 입력된다

- 십자 뒤집기 횟수(n)가 입력된다

- 십자 뒤집기 좌표가 횟수(n)만큼 입력된다. 단, n은 10이하의 자연수이다.

**입력 예시**
```
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
2
10 10
12 12
```

## 출력
- 십자 뒤집기 결과를 출력한다

**출력 예시**
```
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
```

##코드
"""

#바둑판 상황
baduk = []

#19줄
for _ in range(19):
    baduk_now = list(map(int, input().split()))
    baduk.append(baduk_now)

#십자 뒤집기 횟수 받기
n = int(input())

#십자 뒤집기 좌표 받기
for _ in range(n):
    x, y = map(lambda num : int(num)-1, input().split())

#십자 뒤집기
#[true_value] if [condition] else [false_value]
    for i in range(19):
        #가로
        baduk[x][i] = 1 if baduk[x][i] == 0 else 0
        #세로
        baduk[i][y] = 1 if baduk[i][y] == 0 else 0

#출력하기        
for b in baduk:
    print(*b)